name: GAE Deploy

on:
  push:
    branches: 
      - master
jobs:
  testfront:
   name: Test Frontend
   runs-on: ubuntu-latest

   env:
     client: ./client

   steps:
     - name: Checkout
       uses: actions/checkout@v2

     - name: Node Setup
       uses: actions/setup-node@v1
       with:
        node-version: 12

     - name: NPM Install
       run: npm ci
       working-directory: ${{env.client}}

     - name: Test Frontend
       run: npm test
       working-directory: ${{env.client}}

  testback:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Node Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: NPM Install
        run: npm ci

      - name: Test Backend
        run: npm test

  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: [testfront, testback]

    env:
     client: ./client

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Node Setup
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: NPM Install
        run: npm ci
        working-directory: ${{env.client}}

      - name: Build Frontend
        run: npm build
        working-directory: ${{env.client}}
      
      - name: ENV vars
        run: |
          echo '
           recapta: '${{ serects.RECAPTA_PRIVATE_KEY }} >> app.yaml
          echo ' MAIL_SENDER: '${{ serects.MAIL_SENDER }} >> app.yaml
          echo ' MAIL_REPLYTO: '${{ serects.MAIL_REPLYTO }} >> app.yaml
          echo ' SENDGRID_API: '${{ serects.SENDGRID_API }} >> app.yaml
          echo ' mongoConnect: '${{ serects.MONGODB_CONNECT }} >> app.yaml
          echo ' mongouser: '${{ serects.MONGODB_USER }} >> app.yaml
          echo ' mongopass: '${{ serects.MONGODB_PASS }} >> app.yaml
          cat app.yaml
